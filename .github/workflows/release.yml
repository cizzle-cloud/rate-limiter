name: Release

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  prepare-release:
    name: Prepare Release
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      ignore-bump: ${{ steps.bump-check.outputs.ignore-bump }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version bump
        run: |
          ./bump-version.sh

      - name: Check if version bump should be ignored
        id: bump-check
        run: |
          if [ -f .bump-ignore ]; then
            echo "ignore-bump=true" >> $GITHUB_OUTPUT
          else
            echo "ignore-bump=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        if: steps.bump-check.outputs.ignore-bump == 'false'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Commit and push changes
        if: steps.bump-check.outputs.ignore-bump == 'false'
        run: |
          git checkout release
          git add VERSION
          git add CHANGELOG.md
          git commit -m "update VERSION and CHANGELOG.md"
          git push origin ${{ github.head_ref }}

  tag:
    name: Tag and Merge Release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Read version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Create and push tag
        run: |
          git checkout main
          git pull origin main
          TAG="v${VERSION}"
          git tag -a $TAG -m "Release $TAG"
          git push origin $TAG
          echo "Created and pushed tag $TAG"

      - name: Merge release into develop
        run: |
          # Check if release branch exists
          if git ls-remote --heads origin release | grep release; then
            git checkout origin/develop -b develop
            git merge --no-ff origin/release -m "Merge release branch back into develop"
            git push origin develop
            echo "Successfully merged release branch into develop"
            
            git push origin --delete release
          else
            echo "Release branch does not exist, skipping merge step"
          fi

  create-release:
    name: Create Release
    needs: tag
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version
        run: echo "VERSION=$(cat VERSION)" >> $GITHUB_ENV

      - name: Create archive
        run: |
          mkdir dist
          tar -czf dist/rate-limiter-${VERSION}.tar.gz . --exclude=dist
          zip -r dist/rate-limiter-${VERSION}.zip . -x dist/\*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: |
            Release of rate-limiter ${{ env.VERSION }}

            The entire changelog for this release can be found [here](./CHANGELOG.md).
          files: |
            dist/rate-limiter-${{ env.VERSION }}.tar.gz
            dist/rate-limiter-${{ env.VERSION }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
